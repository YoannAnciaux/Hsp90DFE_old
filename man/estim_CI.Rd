% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parameter_analysis.R
\name{estim_CI}
\alias{estim_CI}
\title{Confidence interval for MLE output}
\usage{
estim_CI(mle, conf_level = 0.95, bonf = T)
}
\arguments{
\item{mle}{Object of class "maxLik". (See \code{\link{maxLik}{maxLik}}).}

\item{conf_level}{Number between 0 and 1. Default 0.95. Confidence level for the confidence
interval.}

\item{bonf}{Logical. Default True. If True applies a Bonferroni correction to
computes the critical value used for the confidence interval which depends on
the number of parameter. This provides simulatenous confidence interval. If False,
does not apply any correction, so the confidence intervals are not simultaneous
for motre than one parameter.}
}
\value{
Returns a matrix with the estimate, the standard error, the upper bound
 and the lower bound of the confidence interval.
}
\description{
Approximation of the confidence interval for object of class "maxLix" (See
\code{\link{maxLik}{maxLik}}) such as output from \code{\link{mle_dfgm}}.
The confidence interval are computed using the asymptotic normal approximation.
(Implemented following https://www.stat.umn.edu/geyer/5931/mle/mle.pdf)
}
\examples{
# Parameters
nsample <- 1000; n <- 4; lambda <- 0.5; so <- 1; alpha <- 1/2; Q <- 2;
# Simulated data
s <- rfgm(nsample, n, lambda, so, alpha, Q)
# Noise on initial parameters
initial_parameter <- c(n = ceiling(abs(rnorm(1, n))),
                       lambda = abs(rnorm(1, lambda, sd = 0.1)),
                       so = abs(rnorm(1, n)))
# Constraints on parameters (not applioed for all methods see maxLik in maxLik package)
consA <- rbind(c(1, 0, 0),
               c(0, 1, 0),
               c(0, 0, 1))
consB <- c(0, 0, -max(s))
# MLE
mle <- mle_dfgm(s, model = "Martin", start = initial_parameter,
                method = "NM", constraints = list(ineqA = consA, ineqB = consB))

CI <- estim_CI(mle, bonf = FALSE)
CI_simultaneous <- estim_CI(mle, bonf = TRUE)

}
\seealso{
\code{\link{mle_dfgm}}
}
